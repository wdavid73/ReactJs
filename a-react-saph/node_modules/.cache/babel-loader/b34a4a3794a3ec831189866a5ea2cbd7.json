{"ast":null,"code":"import _classCallCheck from \"D:\\\\ProyectosReact\\\\a-react-saph\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\ProyectosReact\\\\a-react-saph\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\ProyectosReact\\\\a-react-saph\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\ProyectosReact\\\\a-react-saph\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\ProyectosReact\\\\a-react-saph\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\ProyectosReact\\\\a-react-saph\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\"; //componentes\n\nimport Formulario from \"./components/Formulario\";\nimport Resumen from \"./components/Resumen\";\nimport Resultado from \"./components/Resultado\";\nimport { obtenerDiferenciaAnio, calcularMarca, obtenerPlan } from \"./Helper\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      datosAuto: {},\n      resultado: \"\"\n    };\n\n    _this.cotizarSeguro = function (datos) {\n      //destructuring para los datos\n      var marca = datos.marca,\n          year = datos.year,\n          plan = datos.plan; //base del seguro \n\n      var resultado = 2000; //obtener diferencia por a単o\n\n      var diferenciaYear = obtenerDiferenciaAnio(year); //restar 3% por cada a単o que pasa\n\n      resultado -= diferenciaYear * 3 * resultado / 100; //aumentar precio segun la marca\n\n      resultado = calcularMarca(marca) * resultado; //incrementar valor segun el plan \n\n      var incrementoPlan = obtenerPlan(plan);\n      resultado *= incrementoPlan;\n      resultado = parseFloat(resultado).toFixed(2);\n      var datosAuto = {\n        marca: marca,\n        year: year,\n        plan: plan\n      };\n\n      _this.setState({\n        datosAuto: datosAuto,\n        resultado: resultado\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"contener-formulario\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Formulario, Object.assign({\n        cotizarSeguro: true\n      }, this.cotizarSeguro, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })), React.createElement(Resumen, {\n        datosAuto: this.state.datosAuto,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(Resultado, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };","map":{"version":3,"sources":["D:\\ProyectosReact\\a-react-saph\\src\\App.js"],"names":["React","Component","Formulario","Resumen","Resultado","obtenerDiferenciaAnio","calcularMarca","obtenerPlan","App","state","datosAuto","resultado","cotizarSeguro","datos","marca","year","plan","diferenciaYear","incrementoPlan","parseFloat","toFixed","setState"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP,C,CACA;;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AAEA,SAASC,qBAAT,EAAgCC,aAAhC,EAA+CC,WAA/C,QAAkE,UAAlE;;IAEqBC,G;;;;;;;;;;;;;;;;;UAEnBC,K,GAAQ;AACNC,MAAAA,SAAS,EAAE,EADL;AAENC,MAAAA,SAAS,EAAE;AAFL,K;;UAKRC,a,GAAgB,UAACC,KAAD,EAAW;AACzB;AADyB,UAEjBC,KAFiB,GAEKD,KAFL,CAEjBC,KAFiB;AAAA,UAEVC,IAFU,GAEKF,KAFL,CAEVE,IAFU;AAAA,UAEJC,IAFI,GAEKH,KAFL,CAEJG,IAFI,EAGzB;;AACA,UAAIL,SAAS,GAAG,IAAhB,CAJyB,CAKzB;;AACA,UAAMM,cAAc,GAAGZ,qBAAqB,CAACU,IAAD,CAA5C,CANyB,CAOzB;;AACAJ,MAAAA,SAAS,IAAMM,cAAc,GAAG,CAAlB,GAAuBN,SAAxB,GAAqC,GAAlD,CARyB,CASzB;;AACAA,MAAAA,SAAS,GAAGL,aAAa,CAACQ,KAAD,CAAb,GAAuBH,SAAnC,CAVyB,CAWzB;;AACA,UAAIO,cAAc,GAAGX,WAAW,CAACS,IAAD,CAAhC;AACAL,MAAAA,SAAS,IAAIO,cAAb;AACAP,MAAAA,SAAS,GAAGQ,UAAU,CAACR,SAAD,CAAV,CAAsBS,OAAtB,CAA8B,CAA9B,CAAZ;AAEA,UAAMV,SAAS,GAAG;AAChBI,QAAAA,KAAK,EAAEA,KADS;AAEhBC,QAAAA,IAAI,EAAEA,IAFU;AAGhBC,QAAAA,IAAI,EAAEA;AAHU,OAAlB;;AAMA,YAAKK,QAAL,CAAc;AACZX,QAAAA,SAAS,EAAEA,SADC;AAEZC,QAAAA,SAAS,EAAEA;AAFC,OAAd;AAID,K;;;;;;;6BAEQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,UAAD;AACE,QAAA,aAAa;AADf,SACoB,KAAKC,aADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFF,EAME,oBAAC,OAAD;AACE,QAAA,SAAS,EAAE,KAAKH,KAAL,CAAWC,SADxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,EAUE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF,CADF,CADF;AAiBD;;;;EArD8BT,S;;SAAZO,G","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\n//componentes\nimport Formulario from \"./components/Formulario\";\nimport Resumen from \"./components/Resumen\";\nimport Resultado from \"./components/Resultado\"\n\nimport { obtenerDiferenciaAnio, calcularMarca, obtenerPlan } from \"./Helper\";\n\nexport default class App extends Component {\n\n  state = {\n    datosAuto: {},\n    resultado: \"\"\n  };\n\n  cotizarSeguro = (datos) => {\n    //destructuring para los datos\n    const { marca, year, plan } = datos\n    //base del seguro \n    let resultado = 2000\n    //obtener diferencia por a単o\n    const diferenciaYear = obtenerDiferenciaAnio(year);\n    //restar 3% por cada a単o que pasa\n    resultado -= ((diferenciaYear * 3) * resultado) / 100\n    //aumentar precio segun la marca\n    resultado = calcularMarca(marca) * resultado\n    //incrementar valor segun el plan \n    let incrementoPlan = obtenerPlan(plan)\n    resultado *= incrementoPlan\n    resultado = parseFloat(resultado).toFixed(2)\n\n    const datosAuto = {\n      marca: marca,\n      year: year,\n      plan: plan\n    }\n\n    this.setState({\n      datosAuto: datosAuto,\n      resultado: resultado,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"contener-formulario\">\n\n          <Formulario\n            cotizarSeguro {...this.cotizarSeguro}\n          />\n\n          <Resumen\n            datosAuto={this.state.datosAuto}\n          />\n\n          <Resultado/>\n\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}